// This file was generated from a template. Edit it to match your keyboard. test test
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;

    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
    require-prior-idle-ms = <125>;
};

&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <250>;
};

/ {
    // Define a default keymap here.
    // See https://zmk.dev/docs/development/hardware-integration/new-shield#default-keymap.

    combos {
        compatible = "zmk,combos";

        ae {
            bindings = <&kp DE_A_UMLAUT>;
            key-positions = <10 2>;
        };

        ue {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <6 2>;
        };

        oe {
            bindings = <&kp DE_O_UMLAUT>;
            key-positions = <8 2>;
        };

        flayer {
            bindings = <&mo 3>;
            key-positions = <34 35>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <20 31>;
        };

        boot {
            bindings = <&bootloader>;
            key-positions = <4 5>;
            layers = <3>;
        };

        colon {
            bindings = <&kp DE_COLON>;
            key-positions = <6 7>;
        };

        Show_l0 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(N0))>;
            key-positions = <31 5>;
            layers = <0>;
        };

        Show_l1 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(NUMBER_1))>;
            key-positions = <31 5>;
            layers = <2>;
        };

        Show_l2 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(NUMBER_2))>;
            key-positions = <31 5>;
            layers = <3>;
        };

    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 25 32 33 34 20>;
            hold-trigger-on-release;
        };

            back_del: back_del {
            compatible = "zmk,behavior-tap-dance";
            label = "BACK_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;
        };    
    };

    keymap {
        compatible = "zmk,keymap";

        QWE {
            display-name = "QWE";
             bindings = <
                  &kp DE_Q     &kp W        &kp E                &kp R         &kp T                      &kp DE_Z         &kp U        &kp I         &kp O       &kp DE_DQT
                  &hml LGUI A  &hml LALT S  &hml LCTRL D         &hml LSHFT F  &kp G                      &kp H            &kp DE_J     &kp DE_K      &kp DE_L    &kp DE_P
&mt LCTRL ESCAPE  &kp DE_Y     &kp X        &kp C                &kp V         &kp B                      &kp N            &kp M        &kp DE_COMMA  &kp DE_DOT  &kp DE_MINUS  &kp LEFT_SHIFT
                                            &mt LEFT_ALT ESCAPE  &kp TAB       &mt LEFT_SHIFT DE_SPACE    &lt 2 BACKSPACE  &lt 1 ENTER  &kp DE_COLON
            >;
        };

        NAV {
            display-name = "NAV";
            bindings = <
        &kp DE_N1             &kp DE_N2           &kp DE_N3             &kp DE_N4            &kp DE_N5              &kp DE_N6             &kp DE_N7             &kp DE_N8      &kp DE_N9            &kp DE_N0
        &hml LEFT_GUI DELETE  &hml LEFT_ALT HOME  &hml LCTRL PAGE_DOWN  &hml LSHIFT PAGE_UP  &hml LEFT_SHIFT END    &hmr LEFT_SHIFT LEFT  &hmr LEFT_SHIFT DOWN  &hmr LCTRL UP  &hmr LEFT_ALT RIGHT  &hmr LEFT_GUI BACKSPACE
&trans  &trans                &trans              &trans                &trans               &trans                 &trans                &trans                &trans         &trans               &trans                   &trans
                                                  &trans                &trans               &trans                 &trans                &trans                &trans
            >;
        };

        SYM {
            display-name = "SYM";
            bindings = <
        &kp ESC       &kp DE_LEFT_BRACKET  &kp DE_LEFT_BRACE  &kp DE_LEFT_PARENTHESIS  &kp DE_TILDE      &kp DE_CARET  &kp DE_RIGHT_PARENTHESIS  &kp DE_RIGHT_BRACE  &kp DE_RIGHT_BRACKET  &kp DE_GRAVE
        &kp DE_MINUS  &kp DE_ASTERISK      &kp DE_EQUAL       &kp DE_UNDERSCORE        &kp DE_DOLLAR     &kp DE_HASH   &kp LEFT_SHIFT            &kp LCTRL           &kp LEFT_ALT          &kp LEFT_GUI
&trans  &kp DE_PLUS   &kp DE_PIPE          &kp DE_AT          &kp DE_SLASH             &kp DE_PERCENT    &kp DE_COLON  &kp DE_BACKSLASH          &kp DE_AMPS         &kp QMARK             &kp DE_EXCL   &trans
                                           &trans             &trans                   &trans            &trans        &trans                    &trans
            >;
        };

        flayer {
            display-name = "f";
            bindings = <
        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7  &kp F8  &kp F9  &kp F10
        &trans  &trans  &trans  &trans  &kp F11    &kp F12  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };

    };
};