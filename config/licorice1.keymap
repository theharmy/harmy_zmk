// This file was generated from a template. Edit it to match your keyboard. test test
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;

    tapping-term-ms = <250>;
    quick-tap-ms = <0>;
    require-prior-idle-ms = <125>;
};

&lt { quick-tap-ms = <100>; };

/ {
    // Define a default keymap here.
    // See https://zmk.dev/docs/development/hardware-integration/new-shield#default-keymap.

    combos {
        compatible = "zmk,combos";

        ae {
            bindings = <&kp DE_A_UMLAUT>;
            key-positions = <10 2>;
        };

        ue {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <10 6>;
        };

        oe {
            bindings = <&kp DE_O_UMLAUT>;
            key-positions = <10 8>;
        };

        flayer {
            bindings = <&mo 4>;
            key-positions = <34 35>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <20 31>;
        };

        Show_l0 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(N0))>;
            key-positions = <31 5>;
            layers = <0>;
        };

        Show_l1 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(NUMBER_1))>;
            key-positions = <31 5>;
            layers = <2>;
        };

        Show_l2 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(NUMBER_2))>;
            key-positions = <31 5>;
            layers = <3>;
        };

        Show_l3 {
            timeout-ms = <100>;
            bindings = <&kp RA(RC(NUMBER_3))>;
            key-positions = <31 5>;
            layers = <4>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 25 32 33 34 20>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWE {
            display-name = "QWE";
            bindings = <
           &kp DE_Q     &kp W        &kp E         &kp R         &kp T                      &kp DE_Z       &kp U         &kp I         &kp O        &kp DE_MINUS
           &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G                      &kp H          &hmr RSHFT J  &hmr RCTRL K  &hmr LALT L  &hmr RGUI P
&kp LCTRL  &kp DE_Y     &kp X        &kp C         &kp V         &kp B                      &kp N          &kp M         &kp DE_COMMA  &kp DE_DOT   &kp DE_MINUS  &kp DE_HASH
                                     &kp LEFT_ALT  &lt 2 TAB     &mt LEFT_SHIFT DE_SPACE    &kp BACKSPACE  &lt 3 ENTER   &kp RGUI
            >;
        };

        Col {
            display-name = "COL";
            bindings = <
        &kp Q       &kp W       &kp F        &kp P        &kp B     &kp J   &kp L        &kp U        &kp Y       &trans
        &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G     &kp M   &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O
&trans  &kp Z       &kp X       &kp C        &kp D        &kp V     &kp K   &kp H        &trans       &trans      &trans      &trans
                                &trans       &trans       &trans    &trans  &trans       &trans
            >;
        };

        NN {
            display-name = "NUM";
            bindings = <
        &kp PG_UP     &kp BSPC  &kp UP    &kp DEL    &kp PG_DN    &kp DE_MINUS  &kp DE_N7  &kp DE_N8  &kp DE_N9  &kp DE_PLUS
        &kp HOME      &kp LEFT  &kp DOWN  &kp RIGHT  &kp END      &kp DE_COMMA  &kp DE_N4  &kp DE_N5  &kp DE_N6  &kp DE_PERIOD
&trans  &kp DE_CARET  &kp ESC   &kp TAB   &kp RET    &kp LC(Z)    &kp DE_COLON  &kp DE_N1  &kp DE_N2  &kp DE_N3  &kp DE_N0      &trans
                                &trans    &trans     &trans       &trans        &trans     &trans
            >;
        };

        Sym {
            display-name = "Sym";
            bindings = <
        &kp DE_UNDERSCORE  &kp DE_UNDERSCORE  &kp DE_LEFT_BRACKET  &kp RIGHT_BRACKET   &kp DE_CARET    &kp DE_EXCLAMATION  &kp DE_LESS_THAN         &kp DE_GREATER_THAN       &kp DE_EQUAL         &kp DE_AMPERSAND
        &kp DE_BACKSLASH   &kp DE_SLASH       &kp DE_LEFT_BRACE    &kp DE_RIGHT_BRACE  &kp DE_STAR     &kp DE_QUESTION     &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_MINUS         &kp DE_COLON
&trans  &kp DE_HASH        &kp DE_DOLLAR      &kp DE_PIPE          &kp DE_TILDE        &kp DE_GRAVE    &kp PLUS            &kp DE_PERCENT           &kp DE_DOUBLE_QUOTES      &kp DE_SINGLE_QUOTE  &kp DE_SEMICOLON  &kp RSHFT
                                              &trans               &trans              &trans          &trans              &trans                   &trans
            >;
        };

        flayer {
            display-name = "f";
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10
        &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

    };
};