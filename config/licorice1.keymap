// This file was generated from a template. Edit it to match your keyboard.
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;

    tapping-term-ms = <250>;
    quick-tap-ms = <0>;
    require-prior-idle-ms = <125>;
};

&lt { quick-tap-ms = <100>; };

/ {
    // Define a default keymap here.
    // See https://zmk.dev/docs/development/hardware-integration/new-shield#default-keymap.

    combos {
        compatible = "zmk,combos";

        ae {
            bindings = <&kp DE_A_UMLAUT>;
            key-positions = <10 2>;
        };

        ue {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <6 2>;
        };

        oe {
            bindings = <&kp DE_O_UMLAUT>;
            key-positions = <8 2>;
        };

        F-Layer {
            bindings = <&mo 4>;
            key-positions = <34 35>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <20 31>;
        };

        boot {
            bindings = <&bootloader>;
            key-positions = <4 5>;
            layers = <4>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 25 32 33 34 20>;
            hold-trigger-on-release;
        };

        back_del: back_del {
            compatible = "zmk,behavior-tap-dance";
            label = "BACK_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWE {
            bindings = <
           &kp DE_Q     &kp W        &kp E         &kp R         &kp T                      &kp DE_Z         &kp U         &kp I         &kp O        &kp DE_HASH
           &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G                      &kp H            &hmr RSHFT J  &hmr RCTRL K  &hmr LALT L  &hmr RGUI P
&kp LCTRL  &kp DE_Y     &kp X        &kp C         &kp V         &kp B                      &kp N            &kp M         &kp DE_COMMA  &kp DE_DOT   &kp DE_MINUS  &mt LEFT_SHIFT DE_DOUBLE_QUOTES
                                     &kp LEFT_ALT  &kp TAB       &mt LEFT_SHIFT DE_SPACE    &lt 3 BACKSPACE  &lt 2 ENTER   &kp DELETE
            >;
        };

        Colemak {
            bindings = <
        &kp Q       &kp W       &kp F        &kp P        &kp B     &kp J   &kp L        &kp U        &kp Y       &trans
        &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G     &kp M   &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O
&trans  &kp Z       &kp X       &kp C        &kp D        &kp V     &kp K   &kp H        &trans       &trans      &trans      &trans
                                &trans       &trans       &trans    &trans  &trans       &trans
            >;
        };

        Sym {
            bindings = <
        &kp ESC       &kp DE_LEFT_BRACKET  &kp DE_LEFT_BRACE  &kp DE_LEFT_PARENTHESIS  &kp DE_TILDE      &kp DE_CARET  &kp DE_RIGHT_PARENTHESIS  &kp DE_RIGHT_BRACE  &kp DE_RIGHT_BRACKET  &kp DE_GRAVE
        &kp DE_MINUS  &kp DE_ASTERISK      &kp DE_EQUAL       &kp DE_UNDERSCORE        &kp DE_DOLLAR     &kp DE_HASH   &kp LEFT_SHIFT            &kp LCTRL           &kp LEFT_ALT          &kp LEFT_GUI
&trans  &kp DE_PLUS   &kp DE_PIPE          &kp DE_AT          &kp DE_SLASH             &kp DE_PERCENT    &kp KP_N0     &kp DE_BACKSLASH          &kp DE_AMPS         &kp QMARK             &kp DE_EXCL   &kp RSHFT
                                           &trans             &trans                   &trans            &trans        &trans                    &trans
            >;
        };

        NAV {
            bindings = <
        &kp PG_UP     &kp BSPC  &kp UP    &kp DEL    &kp PG_DN    &kp DE_MINUS  &kp DE_N7  &kp DE_N8  &kp DE_N9  &kp PLUS
        &kp HOME      &kp LEFT  &kp DOWN  &kp RIGHT  &kp END      &kp DE_COMMA  &kp N4     &kp N5     &kp N6     &kp DOT
&trans  &kp DE_CARET  &kp ESC   &kp TAB   &kp RET    &kp LC(Z)    &kp DE_COLON  &kp N1     &kp N2     &kp N3     &kp DE_SEMICOLON  &kp RSHFT
                                &trans    &trans     &trans       &trans        &trans     &kp DE_N0
            >;
        };

        F-Layer {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10
        &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
       &trans    &trans    &trans     &trans     &kp RS(RA(RC(NUMBER_7)))    &kp LC(Z)  &kp LC(C)       &kp LC(V)       &kp LC(X)     &kp LC(Y)
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                      &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&to 0  &trans    &trans    &trans     &trans     &trans                      &trans     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                           &trans     &trans     &trans                      &mkp MB1   &mkp MB2        &mkp MB3
            >;
        };

        Sys {
            bindings = <
       &sys_reset   &bt BT_CLR  &out OUT_TOG  &trans  &trans    &kp RS(RA(RC(NUMBER_8)))  &kp F1  &kp F2   &kp F3   &kp F4
       &bootloader  &bt BT_NXT  &trans        &trans  &trans    &trans                    &kp F5  &kp F6   &kp F7   &kp F8
&to 0  &trans       &bt BT_PRV  &trans        &trans  &trans    &trans                    &kp F9  &kp F10  &kp F11  &kp F12  &trans
                                &trans        &trans  &trans    &trans                    &trans  &trans
            >;
        };
    };
};
